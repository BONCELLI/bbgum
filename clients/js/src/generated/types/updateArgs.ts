/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  array,
  bool,
  option,
  string,
  struct,
  u16,
} from '@metaplex-foundation/umi/serializers';
import { Creator, CreatorArgs, getCreatorSerializer } from '.';

export type UpdateArgs = {
  name: Option<string>;
  symbol: Option<string>;
  uri: Option<string>;
  creators: Option<Array<Creator>>;
  sellerFeeBasisPoints: Option<number>;
  primarySaleHappened: Option<boolean>;
  isMutable: Option<boolean>;
};

export type UpdateArgsArgs = {
  name: OptionOrNullable<string>;
  symbol: OptionOrNullable<string>;
  uri: OptionOrNullable<string>;
  creators: OptionOrNullable<Array<CreatorArgs>>;
  sellerFeeBasisPoints: OptionOrNullable<number>;
  primarySaleHappened: OptionOrNullable<boolean>;
  isMutable: OptionOrNullable<boolean>;
};

/** @deprecated Use `getUpdateArgsSerializer()` without any argument instead. */
export function getUpdateArgsSerializer(
  _context: object
): Serializer<UpdateArgsArgs, UpdateArgs>;
export function getUpdateArgsSerializer(): Serializer<
  UpdateArgsArgs,
  UpdateArgs
>;
export function getUpdateArgsSerializer(
  _context: object = {}
): Serializer<UpdateArgsArgs, UpdateArgs> {
  return struct<UpdateArgs>(
    [
      ['name', option(string())],
      ['symbol', option(string())],
      ['uri', option(string())],
      ['creators', option(array(getCreatorSerializer()))],
      ['sellerFeeBasisPoints', option(u16())],
      ['primarySaleHappened', option(bool())],
      ['isMutable', option(bool())],
    ],
    { description: 'UpdateArgs' }
  ) as Serializer<UpdateArgsArgs, UpdateArgs>;
}
